From 4767c1c747e4ca742d0ff613883d54739045607e Mon Sep 17 00:00:00 2001
From: Henrik Jonsson <me@hkjn.me>
Date: Fri, 19 Jan 2018 17:19:34 +0000
Subject: [PATCH] Add mainnet bitcoin support

Based on https://github.com/junderw/lnd.
---
 chainparams.go   | 6 ++++++
 chainregistry.go | 4 ++--
 config.go        | 5 +++++
 3 files changed, 13 insertions(+), 2 deletions(-)

diff --git a/chainparams.go b/chainparams.go
index 0c7fd34..791cb31 100644
--- a/chainparams.go
+++ b/chainparams.go
@@ -33,6 +33,12 @@ var bitcoinTestNetParams = bitcoinNetParams{
 	rpcPort: "18334",
 }
 
+// bitcoinMainNetParams contains parameters specific to the main network
+var bitcoinMainNetParams = bitcoinNetParams{
+	Params:  &bitcoinCfg.MainNetParams,
+	rpcPort: "8334",
+}
+
 // bitcoinSimNetParams contains parameters specific to the simulation test
 // network.
 var bitcoinSimNetParams = bitcoinNetParams{
diff --git a/chainregistry.go b/chainregistry.go
index 160d91f..7e85f8d 100644
--- a/chainregistry.go
+++ b/chainregistry.go
@@ -111,7 +111,7 @@ func newChainControlFromConfig(cfg *config, chanDB *channeldb.DB,
 			TimeLockDelta: cfg.Bitcoin.TimeLockDelta,
 		}
 		cc.feeEstimator = lnwallet.StaticFeeEstimator{
-			FeeRate: 50,
+			FeeRate: 200,
 		}
 	case litecoinChain:
 		cc.routingPolicy = htlcswitch.ForwardingPolicy{
@@ -380,7 +380,7 @@ func newChainControlFromConfig(cfg *config, chanDB *channeldb.DB,
 			// if we're using btcd as a backend, then we can use
 			// live fee estimates, rather than a statically coded
 			// value.
-			fallBackFeeRate := btcutil.Amount(25)
+			fallBackFeeRate := btcutil.Amount(140)
 			cc.feeEstimator, err = lnwallet.NewBtcdFeeEstimator(
 				*rpcConfig, fallBackFeeRate,
 			)
diff --git a/config.go b/config.go
index 3258512..0ef7898 100644
--- a/config.go
+++ b/config.go
@@ -83,6 +83,7 @@ type chainConfig struct {
 
 	Node string `long:"node" description:"The blockchain interface to use." choice:"btcd" choice:"bitcoind" choice:"neutrino"`
 
+	MainNet  bool `long:"mainnet" description:"Use the main network"`
 	TestNet3 bool `long:"testnet" description:"Use the test network"`
 	SimNet   bool `long:"simnet" description:"Use the simulation test network"`
 	RegTest  bool `long:"regtest" description:"Use the regression test network"`
@@ -332,6 +333,10 @@ func loadConfig() (*config, error) {
 		// number of network flags passed; assign active network params
 		// while we're at it.
 		numNets := 0
+		if cfg.Bitcoin.MainNet {
+			numNets++
+			activeNetParams = bitcoinMainNetParams
+		}
 		if cfg.Bitcoin.TestNet3 {
 			numNets++
 			activeNetParams = bitcoinTestNetParams
-- 
2.7.4

