{{define "page_title"}}
Autosite: web tools in Go
{{end}}

{{define "page_content"}}
<div class="language-go">
<p><a href="https://github.com/hkjn/autosite"
target="_blank">Autosite</a> is what I call the simple tools I wrote
in <a href="http://golang.org" target="_blank">Go</a> in order to
implement this website and blog. This page describes my motivations,
and an overview of how the framework &mdash; even though it feels too
small for that word &mdash; can be used.</p>

<h1><a href="#objectives" id="objectives">Objectives</a></h1>
<p>I mainly wanted the following from my web tools:</p>
<ul>
<li>complete separation between logic and content &mdash; I should be able to write new pages
without mucking about with the implementation of the site.</li>
<li>simple implementation &mdash; more complex software is harder to
change, and it's easier to break it when we do have to change it.</li>
<li>some practice with Go patterns &mdash; Go is an excellent,
modern language, but one that I so far find it harder to
&ldquo;think in&rdquo; than Python and which I'm still
learning.</li>
<li>integration with <a href="http://cloud.google.com/appengine"
target="_blank">Google AppEngine</a> &mdash; these days, the idea of
acquiring a physical host, installing an OS, getting co-hosting
etc. is starting to seem pretty prohibitive, compared to using
&ldquo;Cloud Hosting&rdquo; from Google or Amazon.</li>
</ul>

<h1><a href="#example" id="example">An example</a></h1>
<p>When I wanted to write the page you're reading now, I created a new
file called <code>pages/autosite.tmpl</code>, with the following
structure:</p>
<pre>
<code>&#123;&#123;define &quot;page_title&quot;&#125;&#125;
Page title goes here.
&#123;&#123;define &quot;end&quot;&#125;&#125;

&#123;&#123;define &quot;page_content&quot;&#125;&#125;
Page contents (which can include any HTML) goes here.
&#123;&#123;define &quot;end&quot;&#125;&#125;</code>
</pre>

<p>That's all &mdash; the staging version of my site now started
serving <a href="http://[host]/autosite">http://[host]/autosite</a>,
showing the output every time I saved the <code>.tmpl</code> in my
editor and reloaded the page. Once the live version of my site was
pushed, it now started serving this page
at <a href="http://www.hkjn.me/autosite">http://www.hkjn.me/autosite</a>.</p>

<h2><a href="#structure" id="structure">Structure</a></h2>
<p>Backing up a bit, the reason a simple <code>.tmpl</code> file
written in the syntax
of <a href="http://golang.org/pkg/html/template/" target="_blank">Go's
html/template</a> produced a HTML page to be served was due to the following
bit of config that told the autosite framework where to look:</p>
<pre>
<code>var baseTemplates = []string{
	"tmpl/base.tmpl",
	"tmpl/base_header.tmpl",
	"tmpl/style.tmpl",
	"tmpl/fonts.tmpl",
}

var web = autosite.New(
	"Henrik Jonsson",
	"pages/*.tmpl", // glob for pages
	"www.hkjn.me",  // live domain
	append(baseTemplates, "tmpl/page.tmpl"),
)</code>
</pre>

<p>The framework instantiates the <code>base</code> template, but apart
from that is agnostic to the structure of your pages &mdash; as long
as you provide the <code>.tmpl</code> files needed to compile the
pages, you may structure them any way you desire.</p>

In my case, as you may have surmised, I try to be minimalistic. Here is
the entirety of my <code>base.tmpl:</code>
<pre>
<code>&#123;&#123;/* base.tmpl; base template that everything else depends on */&#125;&#125;
&#123;&#123;define &quot;base&quot;&#125;&#125;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &#123;&#123;template &quot;head&quot; .Title&#125;&#125;
&lt;/head&gt;
&lt;body&gt;
  &#123;&#123;template &quot;base_header&quot; .&#125;&#125;
  &#123;&#123;template &quot;main&quot; .&#125;&#125;
  &#123;&#123;template &quot;js&quot; .&#125;&#125;
&lt;/body&gt;
&lt;/html&gt;
&#123;&#123;end&#125;&#125;</code>
</pre>

<p>The <code>main</code> template invoked by <code>base.tmpl</code>
above is defined by two templates so far on my sites
&mdash; <code>blog.tmpl</code>, and <code>page.tmpl</code>:</p>
<pre>
<code>&#123;&#123;/* page.tmpl; a simple article template */&#125;&#125;
&#123;&#123;define &quot;main&quot;&#125;&#125;
&lt;article&gt;
&lt;header&gt;
&lt;h1 class="article_title"&gt;&lt;a href=&quot;&#123;&#123;.URI&#125;&#125;&quot;&gt;
  &#123;&#123;template &quot;page_title&quot; .&#125;&#125;
&lt;/a&gt;&lt;/h1&gt;
&lt;/header&gt;
  &#123;&#123;template &quot;page_content .&quot;&#125;&#125;
&lt;/article&gt;
&#123;&#123;end&#125;&#125;</code>
</pre>

<p>Reusing most of the structure between
the <a href="http://blog.hkjn.me">blog</a> and
the <a href="http://www.hkjn.me">main website</a> is a nice plus here,
but of course the two domains could host completely different websites
as well &mdash; as long as what's being served fits the pattern of
minimalistic static pages like this, it works.</p>

<p>This was not a complete example &mdash; CSS and some other less
interesting bits was not included. However, the main parts that define
the sites are all here. I also did not discuss the actual
implementation of autosite, as opposed to how it's used, but even
taken together with the template hierarchy the entire thing is fairly
compact:</p>
<pre>
<code class="language-bash">$ wc -l {hkjnweb,autosite}/*.go hkjnweb/tmpl/*.tmpl
  248 autosite/autosite.go
  141 autosite/blog.go
   46 hkjnweb/hkjn.go
   14 hkjnweb/tmpl/base.tmpl
   13 hkjnweb/tmpl/base_header.tmpl
   14 hkjnweb/tmpl/blog.tmpl
   15 hkjnweb/tmpl/blog_listing.tmpl
   58 hkjnweb/tmpl/fonts.tmpl
   13 hkjnweb/tmpl/head.tmpl
    3 hkjnweb/tmpl/js.tmpl
   11 hkjnweb/tmpl/page.tmpl
   77 hkjnweb/tmpl/style.tmpl
  653 total
</pre></code>

<h1><a href="#source" id="source">Source</a></h1>
<p>I'm sharing the code under the MIT License in the hope that others
may find it useful. Please <a href="/links#contact">contact me</a> if
you make use of the framework in its current shape, fork it, or have
any suggestions!</p>
<ul>
<li><a href="https://github.com/hkjn/autosite" target="_blank">github.com/hkjn/autosite</a>: The framework itself.</li>
<li><a href="http://godoc.org/github.com/hkjn/autosite" target="_blank">godoc.org/github.com/hkjn/autosite</a>: Generated documentation for the package</a>.
<li><a href="https://github.com/hkjn/hkjnweb" target="_blank">github.com/hkjn/hkjnweb</a>: This website + blog.</li>
</ul>
</p>
</div>
{{end}}
